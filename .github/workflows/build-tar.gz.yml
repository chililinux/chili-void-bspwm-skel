name: Criar release e arquivo .tar.gz

# Gatilhos para o workflow
on:
  push:
    branches:
      - main

  workflow_dispatch:  # Permite a execução manual do workflow
    inputs:
      debug_enabled:  # Input para habilitar o modo de depuração
        type: boolean
        description: 'With TMATE'
        required: false
        default: false

  schedule:  # Executa automaticamente toda sexta-feira às 05:00
    - cron:  '0 5 * * 5'

  repository_dispatch:  # Permite a execução através de eventos de webhook
    types:
      - webhook
      - '**'

# Jobs do workflow
jobs:
  # Job para preparar a release
  prepare-release:
    runs-on: ubuntu-20.04  # Define a máquina virtual a ser usada
    steps:
      - id: time
        uses: nanzm/get-time-action@v1.1  # Ação para obter o tempo atual
        with:
          format: 'YYYY-MM-DD_HH-mm'
    outputs:
      release_tag: ${{ steps.time.outputs.time }}  # Saída do job

 # Job para construir a release
  build:
    runs-on: ubuntu-latest
    needs: [prepare-release]  # Depende do job prepare-release
    strategy:
      matrix:
        NAME: [chili-void-bspwm-skel] # Define o nome do pacote

    steps:
    - name: Checkout do código
      uses: actions/checkout@v2

    - name: Criar arquivo .tar.gz
	  run: tar -cf ${{ matrix.name }}-${{ steps.create_release.outputs.upload_url }}.tar.gz .

    - name: Salvar arquivo .tar.gz como artefato
      uses: actions/upload-artifact@v2
      with:
        name: arquivos
        path: chili-void-bspwm-skel.tar.gz

    - name: Verificar e excluir release existente
      id: check_and_delete_release
      run: |
        response_code=$(curl -s -o /dev/null -w "%{http_code}" -X GET -H "Authorization: Bearer ${{ secrets.ORGANIZATION_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/v1.0.0")
        if [ "$response_code" -eq "200" ]; then
          curl -X DELETE -H "Authorization: Bearer ${{ secrets.ORGANIZATION_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/v1.0.0"
        fi

    - name: Criar release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ORGANIZATION_TOKEN }}
      with:
        tag_name: v1.0.0-$(date +"%Y%m%d%H%M%S")
        release_name: Release v1.0.0
        body: |
          Descrição do release aqui.
        draft: false
        prerelease: false

    - name: Fazer upload do arquivo .tar.gz no release
      if: ${{ steps.check_and_delete_release.outputs.response_code }} != '200'
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ORGANIZATION_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./chili-void-bspwm-skel.tar.gz
        asset_name: chili-void-bspwm-skel.tar.gz
        asset_content_type: application/gzip
